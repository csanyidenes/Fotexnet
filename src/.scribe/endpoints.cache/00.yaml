## Autogenerated by Scribe. DO NOT MODIFY.

name: Movies
description: |-

  API for managing movies.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/movies
    metadata:
      groupName: Movies
      groupDescription: |-

        API for managing movies.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all movies'
      description: 'Returns a list of all movies.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      title:
        name: title
        description: 'Search by title.'
        required: false
        example: Inception
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      title: Inception
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "success": true,
             "data": [
                 {
                     "id": 1,
                     "title": "Inception",
                     "age_rating": 16,
                     "language": "English",
                     "cover_image": "https://example.com/inception.jpg",
                     "projections": [
                         {
                             "id": 1,
                             "start_time": "2025-03-25 19:00:00",
                             "available_seats": 100
                         },
                         {
                             "id": 2,
                             "start_time": "2025-03-26 14:00:00",
                             "available_seats": 150
                         }
                     ]
                 },
                 {
                     "id": 2,
                     "title": "Titanic",
                     "age_rating": 12,
                     "language": "English",
                     "cover_image": "https://example.com/titanic.jpg",
                     "projections": [
                         {
                             "id": 3,
                             "start_time": "2025-03-28 20:00:00",
                             "available_seats": 200
                         }
                     ]
                 }
             ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/movies
    metadata:
      groupName: Movies
      groupDescription: |-

        API for managing movies.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new movie'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the movie.'
        required: true
        example: Inception
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      age_rating:
        name: age_rating
        description: 'The age rating of the movie.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      language:
        name: language
        description: 'The language of the movie.'
        required: true
        example: English
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      cover_image:
        name: cover_image
        description: 'The cover image URL of the movie.'
        required: false
        example: 'https://example.com/inception.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      projections:
        name: projections
        description: 'Must have at least 1 items.'
        required: true
        example:
          - []
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'projections[].start_time':
        name: 'projections[].start_time'
        description: 'Must be a valid date in the format <code>Y-m-d H:i:s</code>.'
        required: true
        example: '2025-03-21 21:07:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'projections[].available_seats':
        name: 'projections[].available_seats'
        description: 'Must be at least 0. Must not be greater than 300.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: Inception
      age_rating: 16
      language: English
      cover_image: 'https://example.com/inception.jpg'
      projections:
        -
          start_time: '2025-03-21 21:07:08'
          available_seats: 1
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
             "success": true,
             "id": 1
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
             "message": "Validation Error",
             "errors": {
                 "title": ["The title field is required."],
                 "age_rating": ["The age_rating field is required."]
             }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/movies/{id}'
    metadata:
      groupName: Movies
      groupDescription: |-

        API for managing movies.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a single movie'
      description: 'Returns a single movie by ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "success": true,
             "data": {
                 "id": 1,
                 "title": "Inception",
                 "age_rating": 16,
                 "language": "English",
                 "cover_image": "https://example.com/inception.jpg"
             }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "success": false,
             "message": "Movie not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/movies/{id}'
    metadata:
      groupName: Movies
      groupDescription: |-

        API for managing movies.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a movie'
      description: 'Updates an existing movie.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the movie.'
        required: false
        example: Inception
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      age_rating:
        name: age_rating
        description: 'The age rating of the movie.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      language:
        name: language
        description: 'The language of the movie.'
        required: false
        example: English
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      cover_image:
        name: cover_image
        description: 'The cover image URL of the movie.'
        required: false
        example: 'https://example.com/inception.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: Inception
      age_rating: 16
      language: English
      cover_image: 'https://example.com/inception.jpg'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "success": true,
             "id": 1
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "success": false,
             "message": "Movie not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/movies/{id}'
    metadata:
      groupName: Movies
      groupDescription: |-

        API for managing movies.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a movie'
      description: 'Deletes a movie by ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "success": true,
             "message": "Movie deleted successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "success": false,
             "message": "Movie not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
